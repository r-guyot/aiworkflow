% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/qdrant.R
\name{qdrant_upsert_points}
\alias{qdrant_upsert_points}
\title{Qdrant: Upsert points}
\usage{
qdrant_upsert_points(
  conn,
  points = list(),
  collection_name,
  generate_id = TRUE
)
}
\arguments{
\item{conn}{a connection object created by get_qdrant_connection()}

\item{points}{a list containing vector embeddings. A very specific format is expected.
Here is the format that is expected (example of a vector of size 3):
list(points=list(list(id=1,
payload=list(text="hi there"),
vector=list(0.1,0.5,0.6))))
Note that 'payload' can contain a lot more data than 'text'.
You can add more variables if needed within the payload list.}

\item{collection_name}{the name of the collection you want to use. Defaults to NA.}

\item{generate_id}{boolean, defaults to TRUE. If TRUE, will automatically create a unique UUID
for your vector, as it is needed by qdrant. If you don't use this, you have to provide an id by yourself.}
}
\description{
\code{qdrant_upsert_points} establishes a connection with a qdrant instance and insert points (vector) in a collection.
'
}
\details{
Inserts vector entries into an existing collection.
}
\examples{
conn <- get_qdrant_connection()
qdrant_create_new_collection(conn, collection_name="test_db",
vectors=list(size=3,distance="Cosine"))
new_vectors <- list(points=list(list(payload=list(text="hi there"),
                      vector=list(0.1,0.5,0.6))))
qdrant_upsert_points(conn, points=new_vectors,
collection_name="test_db",generate_id=TRUE)
qdrant_delete_collection(conn, "test_db")

}
