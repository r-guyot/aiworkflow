% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/workflows.R
\name{execute_workflow_on_df}
\alias{execute_workflow_on_df}
\title{Execute an AI workflow on a dataframe (with or without a pipe)}
\usage{
execute_workflow_on_df(
  df,
  prompt_column_name = "prompt",
  image_column_name = NA_character_,
  workflow_obj,
  result_column_name = "result",
  auto_use_df_variables = F
)
}
\arguments{
\item{df}{The source dataframe or tibble to use as input for the workflow to execute.}

\item{prompt_column_name}{A vector for the name of the column that corresponds to the prompts to send to the workflow. Defaults to "prompt"}

\item{image_column_name}{An optional vector (defaults to NA) that corresponds to the images to be sent to the workflow. It can only work if you use a model with Vision capabilities and which such capability turned on.}

\item{workflow_obj}{A workflow object containing all parameters describing the flow required for execution}

\item{result_column_name}{A vector for the name of the column that corresponds to the outcome of the workflow. Defaults to "result". This is a new column that will be created.}

\item{auto_use_df_variables}{A boolean value (defaults to FALSE). If TRUE, it will attempt to find column names that corresponds to parameters that can be used to modify the workflow, such as temperature, n_ctx, etc...}
}
\value{
the original df with the new column corresponding to the results of the workflow.
}
\description{
\code{execute_workflow_on_df} executes an AI workflow by applying a workflow object on an input dataframe (or tibble).
}
\details{
This function executes an AI workflow by combining prompt vectors and a workflow object.
If auto_use_df_variables is set to TRUE and you have the right columns to tweak the model for every line, you will end up with different parameters applied to the workflow for every line.
The parameters recognized currently as columns are:
\itemize{
\item "temperature"
\item "n_predict"
\item "seed"
\item "num_ctx"
\item "model"
\item "overall_background"
\item "system_prompt"
\item "style_of_voice"
\item "frequency_penalty"
\item "presence_penalty"
\item "repeat_penalty"
\item "n_predict"
}
}
\examples{
myflow <- ai_workflow() |> 
  set_connector("ollama")  |>
  set_model(model_name= "llama3.2:3b-instruct-q5_K_M") |> 
  set_n_predict(3000) |> 
  set_temperature(0.8) |>
  set_seed(seed = 13) |> 
  set_num_ctx(num_ctx = 5000) 
  
df_test <- tibble::tribble(~prompt,~temperature,~seed,~system_prompt,~style_of_voice,
"why is the sky blue?", 0.8,13123,NA_character_,"Yoda",
"why is the sky blue?", 0.6,12321255,NA_character_,"Tolkien",
"why is the sky blue?", 0.2,12,"You are a expert in colorimetry.","George R Martin",
"why is the sky blue?", 0,11111111,NA_character_,"CS Lewis",
"what is 2+2 ??", 0.8,124,NA_character_,"Hemingway",
"what is 2+2 ??", 0,34343,NA_character_,"Gandalf",
"what is tequila made of?",0,34343,NA_character_,"Obama")

df_test <- df_test |> 
execute_workflow_on_df(workflow_obj = myflow, auto_use_df_variables=T)

}
